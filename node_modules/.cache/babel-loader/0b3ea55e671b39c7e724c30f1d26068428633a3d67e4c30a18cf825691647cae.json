{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\'NEO'\\\\Desktop\\\\tdp darbs\\\\Frontend\\\\frontend_dala\\\\src\\\\components\\\\forms\\\\inputs\\\\FormInput.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useField } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormInput = props => {\n  _s();\n  const CustomInput = props.tag || 'input';\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.containerClassName,\n    children: [props.label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: props.labelClassName,\n      htmlFor: props.id || props.name,\n      children: [props.label, props.required && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 ml-0.5 text-sm\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      ...field,\n      id: props.id || props.name,\n      name: props.name || props.id,\n      placeholder: props.placeholder,\n      type: props.type || \"text\",\n      className: props.inputClassName + \" \" + (meta.touched && meta.error ? \" border-red-500 focus:border-red-500 focus:ring-red-500\" : (props.borderClassName || \" border-gray-400\") + \" focus:border-sky-500 focus:ring-sky-500\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 text-sm\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(FormInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n_c = FormInput;\nvar _c;\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"names":["React","useField","FormInput","props","CustomInput","tag","field","meta","containerClassName","label","labelClassName","id","name","required","placeholder","type","inputClassName","touched","error","borderClassName"],"sources":["C:/Users/'NEO'/Desktop/tdp darbs/Frontend/frontend_dala/src/components/forms/inputs/FormInput.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useField } from 'formik';\r\n\r\nexport const FormInput: React.FC<TextInputProps> = (props) => {\r\n    const CustomInput: any = props.tag || 'input';\r\n    const [field, meta] = useField(props);\r\n\r\n    return (\r\n        <div className={props.containerClassName}>\r\n            {props.label &&\r\n                <label\r\n                    className={props.labelClassName}\r\n                    htmlFor={props.id || props.name}\r\n                >\r\n                    {props.label}\r\n                    {props.required && <span className=\"text-red-500 ml-0.5 text-sm\">*</span>}\r\n                </label>\r\n            }\r\n            <CustomInput\r\n                {...field}\r\n                id={props.id || props.name}\r\n                name={props.name || props.id}\r\n                placeholder={props.placeholder}\r\n                type={props.type || \"text\"}\r\n                className={props.inputClassName + \" \" + (meta.touched && meta.error ? \" border-red-500 focus:border-red-500 focus:ring-red-500\" : ((props.borderClassName) || \" border-gray-400\") + \" focus:border-sky-500 focus:ring-sky-500\")}\r\n            />\r\n            {meta.touched && meta.error &&\r\n                <div className=\"text-red-500 text-sm\">{meta.error}</div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\ninterface TextInputProps {\r\n    id?: string;\r\n    tag?: string;\r\n    name: string;\r\n    type?: string;\r\n    placeholder?: string;\r\n    label?: string;\r\n    containerClassName?: string;\r\n    labelClassName?: string;\r\n    inputClassName?: string;\r\n    required?: boolean;\r\n    borderClassName?: string;\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,QAAQ;AAAC;AAElC,OAAO,MAAMC,SAAmC,GAAIC,KAAK,IAAK;EAAA;EAC1D,MAAMC,WAAgB,GAAGD,KAAK,CAACE,GAAG,IAAI,OAAO;EAC7C,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGN,QAAQ,CAACE,KAAK,CAAC;EAErC,oBACI;IAAK,SAAS,EAAEA,KAAK,CAACK,kBAAmB;IAAA,WACpCL,KAAK,CAACM,KAAK,iBACR;MACI,SAAS,EAAEN,KAAK,CAACO,cAAe;MAChC,OAAO,EAAEP,KAAK,CAACQ,EAAE,IAAIR,KAAK,CAACS,IAAK;MAAA,WAE/BT,KAAK,CAACM,KAAK,EACXN,KAAK,CAACU,QAAQ,iBAAI;QAAM,SAAS,EAAC,6BAA6B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACrE,eAEZ,QAAC,WAAW;MAAA,GACJP,KAAK;MACT,EAAE,EAAEH,KAAK,CAACQ,EAAE,IAAIR,KAAK,CAACS,IAAK;MAC3B,IAAI,EAAET,KAAK,CAACS,IAAI,IAAIT,KAAK,CAACQ,EAAG;MAC7B,WAAW,EAAER,KAAK,CAACW,WAAY;MAC/B,IAAI,EAAEX,KAAK,CAACY,IAAI,IAAI,MAAO;MAC3B,SAAS,EAAEZ,KAAK,CAACa,cAAc,GAAG,GAAG,IAAIT,IAAI,CAACU,OAAO,IAAIV,IAAI,CAACW,KAAK,GAAG,yDAAyD,GAAG,CAAEf,KAAK,CAACgB,eAAe,IAAK,kBAAkB,IAAI,0CAA0C;IAAE;MAAA;MAAA;MAAA;IAAA,QAClO,EACDZ,IAAI,CAACU,OAAO,IAAIV,IAAI,CAACW,KAAK,iBACvB;MAAK,SAAS,EAAC,sBAAsB;MAAA,UAAEX,IAAI,CAACW;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAE1D;AAEd,CAAC;AAAC,GA5BWhB,SAAmC;EAAA,QAEtBD,QAAQ;AAAA;AAAA,KAFrBC,SAAmC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}