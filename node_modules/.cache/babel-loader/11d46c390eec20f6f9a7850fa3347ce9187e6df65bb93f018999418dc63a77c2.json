{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\'NEO'\\\\Desktop\\\\tdp darbs\\\\Frontend\\\\frontend_dala\\\\src\\\\components\\\\forms\\\\CreateWishlistForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { FormikForm } from './FormikForm';\nimport { FormInput } from './inputs/FormInput';\nimport { FormFileUpload } from './inputs/FormFileUpload';\nimport * as yup from 'yup';\nimport { api } from '../../config/request';\nimport { imageValidation } from \"../../helpers/validationHelpers\";\nimport { createWishlistErrors, processServerErrors } from '../../config/serverErrors';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateWishlistForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [generalError, setGeneralError] = React.useState(null);\n  const initialValues = {\n    title: '',\n    description: ''\n  };\n  const validationSchema = {\n    title: yup.string().required('Title is required').max(50, 'Title must be less than 50 characters').min(1, 'Title must be at least 1 characters'),\n    description: yup.string().required('Description is required').max(500, 'Description must be less than 500 characters').min(1, 'Description must be at least 1 characters')\n  };\n  const onSubmit = (values, actions) => {\n    const formData = new FormData();\n    formData.append('title', values.title);\n    formData.append('description', values.description);\n    formData.append('image', values.image);\n    api.post('/wishlist/create', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      navigate(`/wishlist/${res.data.hash}`);\n      actions.setSubmitting(false);\n    }).catch(err => {\n      const serverError = processServerErrors(err, actions, setGeneralError, createWishlistErrors);\n      if (!serverError) {\n        setGeneralError(createWishlistErrors['WISHLIST_ERROR'].msg);\n      }\n      actions.setSubmitting(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(FormikForm, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    submitText: \"Create\",\n    className: \"w-full max-w-lg flex flex-col\",\n    submitClassName: \"w-3/6 mx-auto mt-5 bg-sky-500 text-white py-2 rounded-md font-medium mt-10 hover:bg-sky-600 transition duration-200\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col gap-y-4 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(FormFileUpload, {\n        name: \"image\",\n        label: \"Wishlist image\",\n        labelClassName: \"text-gray-700 font-bold\",\n        image: true,\n        fileValidation: imageValidation,\n        customLook: true,\n        containerClassName: \"flex flex-col gap-y-2 items-center justify-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WishlistField, {\n        name: \"title\",\n        label: \"Wishlist title\",\n        placeholder: \"Enter a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WishlistField, {\n        name: \"description\",\n        label: \"Wishlist description\",\n        placeholder: \"Enter a description\",\n        tag: \"textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), generalError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-center font-semibold\",\n        children: generalError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateWishlistForm, \"8ucgcJp0aC4O+qG4uKUYLrKw76M=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateWishlistForm;\nconst WishlistField = _ref => {\n  let {\n    name,\n    label,\n    placeholder,\n    tag\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FormInput, {\n    name: name,\n    tag: tag,\n    label: label,\n    placeholder: placeholder,\n    labelClassName: \"text-gray-700 font-bold\",\n    containerClassName: \"flex flex-col gap-y-2 justify-center\",\n    inputClassName: \"w-full border-2 border-gray-300 rounded-md p-2 focus:border-sky-500 focus:outline-none transition\",\n    required: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_c2 = WishlistField;\nvar _c, _c2;\n$RefreshReg$(_c, \"CreateWishlistForm\");\n$RefreshReg$(_c2, \"WishlistField\");","map":{"version":3,"names":["React","FormikForm","FormInput","FormFileUpload","yup","api","imageValidation","createWishlistErrors","processServerErrors","useNavigate","CreateWishlistForm","navigate","generalError","setGeneralError","useState","initialValues","title","description","validationSchema","string","required","max","min","onSubmit","values","actions","formData","FormData","append","image","post","headers","then","res","data","hash","setSubmitting","catch","err","serverError","msg","WishlistField","name","label","placeholder","tag"],"sources":["C:/Users/'NEO'/Desktop/tdp darbs/Frontend/frontend_dala/src/components/forms/CreateWishlistForm.tsx"],"sourcesContent":["import React from 'react';\r\nimport { FormikForm } from './FormikForm';\r\nimport { FormInput } from './inputs/FormInput';\r\nimport { FormFileUpload } from './inputs/FormFileUpload';\r\nimport * as yup from 'yup';\r\nimport { api } from '../../config/request';\r\nimport { imageValidation } from \"../../helpers/validationHelpers\";\r\nimport { createWishlistErrors, processServerErrors } from '../../config/serverErrors';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const CreateWishlistForm = () => {\r\n    const navigate = useNavigate();\r\n    const [generalError, setGeneralError] = React.useState<string | null>(null);\r\n\r\n    const initialValues = {\r\n        title: '',\r\n        description: '',\r\n    }\r\n\r\n    const validationSchema = {\r\n        title: yup\r\n            .string()\r\n            .required('Title is required')\r\n            .max(50, 'Title must be less than 50 characters')\r\n            .min(1, 'Title must be at least 1 characters'),\r\n        description: yup\r\n            .string()\r\n            .required('Description is required')\r\n            .max(500, 'Description must be less than 500 characters')\r\n            .min(1, 'Description must be at least 1 characters'),\r\n    }\r\n\r\n    const onSubmit = (values: any, actions: any) => {\r\n        const formData = new FormData();\r\n        formData.append('title', values.title);\r\n        formData.append('description', values.description);\r\n        formData.append('image', values.image);\r\n\r\n        api.post('/wishlist/create', formData, {\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        }).then((res) => {\r\n            navigate(`/wishlist/${res.data.hash}`);\r\n            actions.setSubmitting(false);\r\n        }).catch((err) => {\r\n            const serverError = processServerErrors(err, actions, setGeneralError, createWishlistErrors);\r\n            if (!serverError) {\r\n                setGeneralError(createWishlistErrors['WISHLIST_ERROR' as keyof typeof createWishlistErrors].msg);\r\n            }\r\n            actions.setSubmitting(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <FormikForm\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n            submitText=\"Create\"\r\n            className=\"w-full max-w-lg flex flex-col\"\r\n            submitClassName=\"w-3/6 mx-auto mt-5 bg-sky-500 text-white py-2 rounded-md font-medium mt-10 hover:bg-sky-600 transition duration-200\"\r\n        >\r\n            <div className=\"flex flex-col gap-y-4 mt-5\">\r\n                <FormFileUpload\r\n                    name=\"image\"\r\n                    label=\"Wishlist image\"\r\n                    labelClassName=\"text-gray-700 font-bold\"\r\n                    image={true}\r\n                    fileValidation={imageValidation}\r\n                    customLook={true}\r\n                    containerClassName=\"flex flex-col gap-y-2 items-center justify-center\"\r\n                />\r\n                <WishlistField name=\"title\" label=\"Wishlist title\" placeholder=\"Enter a title\" />\r\n                <WishlistField\r\n                    name=\"description\"\r\n                    label=\"Wishlist description\"\r\n                    placeholder=\"Enter a description\"\r\n                    tag=\"textarea\"\r\n                />\r\n                {generalError && <div className=\"text-red-500 text-center font-semibold\">{generalError}</div>}\r\n            </div>\r\n        </FormikForm>\r\n    );\r\n};\r\n\r\nconst WishlistField = ({ name, label, placeholder, tag }: WishlistFieldProps) => {\r\n    return (\r\n        <FormInput\r\n            name={name}\r\n            tag={tag}\r\n            label={label}\r\n            placeholder={placeholder}\r\n            labelClassName=\"text-gray-700 font-bold\"\r\n            containerClassName=\"flex flex-col gap-y-2 justify-center\"\r\n            inputClassName=\"w-full border-2 border-gray-300 rounded-md p-2 focus:border-sky-500 focus:outline-none transition\"\r\n            required={true}\r\n        />\r\n    );\r\n}\r\n\r\ninterface WishlistFieldProps {\r\n    name: string;\r\n    label: string;\r\n    placeholder?: string;\r\n    tag?: string;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}